package com.chnoumis.seshat.email.json.jaxb;import java.io.StringReader;import java.io.StringWriter;import javax.xml.bind.JAXBContext;import javax.xml.bind.JAXBException;import javax.xml.bind.Marshaller;import javax.xml.bind.Unmarshaller;import javax.xml.transform.stream.StreamSource;import org.eclipse.persistence.jaxb.JAXBContextFactory;import org.eclipse.persistence.jaxb.UnmarshallerProperties;import org.springframework.stereotype.Service;import com.chnoumis.seshat.email.xmlmodel.tws.RequestComType;import com.chnoumis.seshat.email.xmlmodel.tws.ResponseComType;@Servicepublic class MessageJson {	public Object unmarshallerJsonResponse(String string)  {		JAXBContext jc;		Object response = null;		try {			jc = JAXBContextFactory.createContext(new Class[] { ResponseComType.class }, null);			Unmarshaller unmarshaller = jc.createUnmarshaller();			unmarshaller.setProperty(UnmarshallerProperties.MEDIA_TYPE, "application/json");			unmarshaller.setProperty("eclipselink.json.include-root", true);			response = unmarshaller.unmarshal(new StreamSource(new StringReader(string)), ResponseComType.class)					.getValue();		} catch (JAXBException e) {			throw new RuntimeException();		}		return response;	}	public String marshallerJsonResponse(Object object)  {		JAXBContext jc;		StringWriter st = new StringWriter();		try {			jc = JAXBContextFactory.createContext(new Class[] { ResponseComType.class }, null);			Marshaller marshaller = jc.createMarshaller();			// marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);			marshaller.setProperty("eclipselink.media-type", "application/json");			marshaller.setProperty("eclipselink.json.include-root", true);			marshaller.marshal(object, st);		} catch (JAXBException e) {			throw new RuntimeException();		} 		return st.toString();	}	public String marshallerJsonRequest(Object object)  {		JAXBContext jc;		StringWriter st = new StringWriter();		try {			jc = JAXBContextFactory.createContext(new Class[] { RequestComType.class }, null);			Marshaller marshaller = jc.createMarshaller();			// marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);			marshaller.setProperty("eclipselink.media-type", "application/json");			marshaller.setProperty("eclipselink.json.include-root", true);			marshaller.marshal(object, st);		} catch (JAXBException e) {			throw new RuntimeException();		} 		return st.toString();	}	public Object unmarshallerJsonRequest(String string)  {		JAXBContext jc;		Object request = null;		try {			jc = JAXBContextFactory.createContext(new Class[] { RequestComType.class }, null);			Unmarshaller unmarshaller = jc.createUnmarshaller();			unmarshaller.setProperty("eclipselink.media-type", "application/json");			unmarshaller.setProperty("eclipselink.json.include-root", true);			request = unmarshaller.unmarshal(new StreamSource(new StringReader(string)), RequestComType.class)					.getValue();		} catch (JAXBException e) {			throw new RuntimeException();		}		return request;	}}